{"uid":"72ec384fe0567ed4","name":"Get file with incorrect file id","fullName":"tests.files.test_files.TestFiles#test_get_file_with_incorrect_file_id","historyId":"f0e4e32ce5f83acacb9e8ff7318ebd7e","time":{"start":1748164589365,"stop":1748164589374,"duration":9},"status":"broken","statusMessage":"AttributeError: UNPROCESSABLE_CONTENT","statusTrace":"self = <tests.files.test_files.TestFiles object at 0x7faf24ff2250>\nfiles_client = <clients.files.files_client.FilesClient object at 0x7faf24b9f050>\n\n    @allure.tag(AllureTag.VALIDATE_ENTITY)\n    @allure.story(AllureStory.VALIDATE_ENTITY)\n    @allure.title(\"Get file with incorrect file id\")\n    @allure.severity(Severity.NORMAL)\n    @allure.sub_suite(AllureStory.VALIDATE_ENTITY)\n    def test_get_file_with_incorrect_file_id(self, files_client: FilesClient):\n        response = files_client.get_file_api(\"incorrect-file-id\")\n        response_data = ValidationErrorResponseSchema.model_validate_json(response.text)\n    \n>       assert_status_code(response.status_code, HTTPStatus.UNPROCESSABLE_CONTENT)\n\ntests/files/test_files.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <enum 'HTTPStatus'>, name = 'UNPROCESSABLE_CONTENT'\n\n    def __getattr__(cls, name):\n        \"\"\"\n        Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: UNPROCESSABLE_CONTENT\n\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/enum.py:786: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1748164580366,"stop":1748164580417,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"save_allure_environment_file","time":{"start":1748164580417,"stop":1748164580417,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"public_users_client","time":{"start":1748164588246,"stop":1748164588267,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"function_user","time":{"start":1748164588267,"stop":1748164588791,"duration":524},"status":"passed","steps":[{"name":"Create user","time":{"start":1748164588267,"stop":1748164588791,"duration":524},"status":"passed","steps":[{"name":"Make POST request to '/api/v1/users'","time":{"start":1748164588267,"stop":1748164588790,"duration":523},"status":"passed","steps":[],"attachments":[{"uid":"785722c3d99f1816","name":"cURL command","source":"785722c3d99f1816.txt","type":"text/plain","size":447}],"parameters":[{"name":"url","value":"'/api/v1/users'"},{"name":"json","value":"{'email': 'cheslavrozhkov@example.com', 'password': '#eG0Y6wuY&', 'lastName': 'Колесникова', 'firstName': 'Пимен', 'middleName': 'Захар'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"CreateUserRequestSchema(email='cheslavrozhkov@example.com', password='#eG0Y6wuY&', last_name='Колесникова', first_name='Пимен', middle_name='Захар')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"files_client","time":{"start":1748164588791,"stop":1748164589364,"duration":573},"status":"passed","steps":[{"name":"Authenticate user","time":{"start":1748164588817,"stop":1748164589334,"duration":517},"status":"passed","steps":[{"name":"Make POST request to '/api/v1/authentication/login'","time":{"start":1748164588817,"stop":1748164589334,"duration":517},"status":"passed","steps":[],"attachments":[{"uid":"7549d07fe15f0b15","name":"cURL command","source":"7549d07fe15f0b15.txt","type":"text/plain","size":374}],"parameters":[{"name":"url","value":"'/api/v1/authentication/login'"},{"name":"json","value":"{'email': 'cheslavrozhkov@example.com', 'password': '#eG0Y6wuY&'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"request","value":"LoginRequestSchema(email='cheslavrozhkov@example.com', password='#eG0Y6wuY&')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: UNPROCESSABLE_CONTENT","statusTrace":"self = <tests.files.test_files.TestFiles object at 0x7faf24ff2250>\nfiles_client = <clients.files.files_client.FilesClient object at 0x7faf24b9f050>\n\n    @allure.tag(AllureTag.VALIDATE_ENTITY)\n    @allure.story(AllureStory.VALIDATE_ENTITY)\n    @allure.title(\"Get file with incorrect file id\")\n    @allure.severity(Severity.NORMAL)\n    @allure.sub_suite(AllureStory.VALIDATE_ENTITY)\n    def test_get_file_with_incorrect_file_id(self, files_client: FilesClient):\n        response = files_client.get_file_api(\"incorrect-file-id\")\n        response_data = ValidationErrorResponseSchema.model_validate_json(response.text)\n    \n>       assert_status_code(response.status_code, HTTPStatus.UNPROCESSABLE_CONTENT)\n\ntests/files/test_files.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <enum 'HTTPStatus'>, name = 'UNPROCESSABLE_CONTENT'\n\n    def __getattr__(cls, name):\n        \"\"\"\n        Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: UNPROCESSABLE_CONTENT\n\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/enum.py:786: AttributeError","steps":[{"name":"Get file by id 'incorrect-file-id'","time":{"start":1748164589365,"stop":1748164589373,"duration":8},"status":"passed","steps":[{"name":"Make GET request to '/api/v1/files/incorrect-file-id'","time":{"start":1748164589365,"stop":1748164589373,"duration":8},"status":"passed","steps":[],"attachments":[{"uid":"332b8ae3810d425e","name":"cURL command","source":"332b8ae3810d425e.txt","type":"text/plain","size":467}],"parameters":[{"name":"url","value":"'/api/v1/files/incorrect-file-id'"},{"name":"params","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"file_id","value":"'incorrect-file-id'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2098d1abaf145fa5","name":"log","source":"2098d1abaf145fa5.txt","type":"text/plain","size":646}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"save_allure_environment_file::0","time":{"start":1748164590826,"stop":1748164590827,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"LMS service"},{"name":"parentSuite","value":"LMS service"},{"name":"suite","value":"Files"},{"name":"tag","value":"VALIDATE_ENTITY"},{"name":"feature","value":"Files"},{"name":"tag","value":"FILES"},{"name":"tag","value":"REGRESSION"},{"name":"story","value":"Validate entity"},{"name":"severity","value":"normal"},{"name":"subSuite","value":"Validate entity"},{"name":"tag","value":"regression"},{"name":"tag","value":"files"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"2418-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.files.test_files"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"969fe8dc175dc469","reportUrl":"https://Subcom5.github.io/autotests-api/4//#testresult/969fe8dc175dc469","status":"broken","statusDetails":"AttributeError: UNPROCESSABLE_CONTENT","time":{"start":1748164443887,"stop":1748164444143,"duration":256}}]},"tags":["REGRESSION","VALIDATE_ENTITY","regression","files","FILES"]},"source":"72ec384fe0567ed4.json","parameterValues":[]}